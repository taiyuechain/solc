#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

..//libevmasm/Exceptions.h
libsolutil/Exceptions.h
-

..//libevmasm/Instruction.h
libevmasm/Exceptions.h
-
libsolutil/Common.h
-
libsolutil/Assertions.h
-
functional
-

..//liblangutil/CharStream.h
cstdint
-
string
-
tuple
-
utility
-

..//liblangutil/Common.h

..//liblangutil/EVMVersion.h
libevmasm/Instruction.h
-
optional
-
string
-
boost/operators.hpp
-

..//liblangutil/ErrorReporter.h
libsolutil/CommonData.h
-
liblangutil/Exceptions.h
-
liblangutil/SourceLocation.h
-
libsolutil/StringUtils.h
-
boost/range/adaptor/filtered.hpp
-

..//liblangutil/Exceptions.h
libsolutil/Exceptions.h
-
libsolutil/Assertions.h
-
libsolutil/CommonData.h
-
liblangutil/SourceLocation.h
-
string
-
utility
-
vector
-
memory
-

..//liblangutil/ParserBase.h
liblangutil/Token.h
-
liblangutil/Scanner.h
-
memory
-
string
-

..//liblangutil/Scanner.h
liblangutil/Token.h
-
liblangutil/CharStream.h
-
liblangutil/SourceLocation.h
-
libsolutil/Common.h
-
libsolutil/CommonData.h
-
optional
-
iosfwd
-

..//liblangutil/SemVerHandler.h
liblangutil/Token.h
-
string
-
utility
-
vector
-

..//liblangutil/SourceLocation.h
libsolutil/Assertions.h
-
libsolutil/Exceptions.h
-
liblangutil/CharStream.h
-
memory
-
string
-

..//liblangutil/SourceReferenceExtractor.h
iosfwd
-
string
-
tuple
-
vector
-

..//liblangutil/SourceReferenceFormatter.h
ostream
-
sstream
-
functional
-
liblangutil/Exceptions.h
-
liblangutil/SourceReferenceExtractor.h
-

..//liblangutil/SourceReferenceFormatterHuman.h
liblangutil/SourceReferenceExtractor.h
-
liblangutil/SourceReferenceFormatter.h
-
libsolutil/AnsiColorized.h
-
ostream
-
sstream
-
functional
-

..//liblangutil/Token.h
libsolutil/Common.h
-
liblangutil/Exceptions.h
-
liblangutil/UndefMacros.h
-
iosfwd
-
string
-
tuple
-

..//liblangutil/UndefMacros.h

..//libsolutil/AnsiColorized.h
ostream
-
vector
-

..//libsolutil/Assertions.h
libsolutil/Exceptions.h
-

..//libsolutil/Common.h
libsolutil/vector_ref.h
-
boost/version.hpp
-
boost/multiprecision/cpp_int.hpp
-
map
-
utility
-
vector
-
functional
-
string
-

..//libsolutil/CommonData.h
iterator
-
libsolutil/Common.h
-
vector
-
type_traits
-
cstring
-
optional
-
string
-
set
-
functional
-
utility
-
type_traits
-

..//libsolutil/Exceptions.h
boost/exception/exception.hpp
-
boost/exception/info.hpp
-
boost/exception/info_tuple.hpp
-
boost/exception/diagnostic_information.hpp
-
exception
-
string
-

..//libsolutil/StringUtils.h
string
-
vector
-
libsolutil/CommonData.h
-

..//libsolutil/vector_ref.h
cstring
-
cassert
-
type_traits
-
vector
-
string
-

/root/work/3/solc/liblangutil/CharStream.cpp
liblangutil/CharStream.h
-
liblangutil/Exceptions.h
-

/root/work/3/solc/liblangutil/EVMVersion.cpp
liblangutil/EVMVersion.h
-

/root/work/3/solc/liblangutil/ErrorReporter.cpp
liblangutil/ErrorReporter.h
-
liblangutil/SourceLocation.h
-
memory
-

/root/work/3/solc/liblangutil/Exceptions.cpp
liblangutil/Exceptions.h
-

/root/work/3/solc/liblangutil/ParserBase.cpp
liblangutil/ParserBase.h
-
liblangutil/Scanner.h
-
liblangutil/ErrorReporter.h
-

/root/work/3/solc/liblangutil/Scanner.cpp
liblangutil/Common.h
-
liblangutil/Exceptions.h
-
liblangutil/Scanner.h
-
algorithm
-
optional
-
ostream
-
tuple
-

/root/work/3/solc/liblangutil/SemVerHandler.cpp
liblangutil/SemVerHandler.h
-
functional
-

/root/work/3/solc/liblangutil/SourceLocation.cpp
liblangutil/Exceptions.h
-
boost/algorithm/string/split.hpp
-
boost/algorithm/string.hpp
-

/root/work/3/solc/liblangutil/SourceReferenceExtractor.cpp
liblangutil/SourceReferenceExtractor.h
-
liblangutil/CharStream.h
-
liblangutil/Exceptions.h
-
cmath
-
iomanip
-

/root/work/3/solc/liblangutil/SourceReferenceFormatter.cpp
liblangutil/SourceReferenceFormatter.h
-
liblangutil/Scanner.h
-
liblangutil/Exceptions.h
-

/root/work/3/solc/liblangutil/SourceReferenceFormatterHuman.cpp
liblangutil/SourceReferenceFormatterHuman.h
-
liblangutil/Scanner.h
-
liblangutil/Exceptions.h
-
iomanip
-

/root/work/3/solc/liblangutil/Token.cpp
liblangutil/Token.h
-
boost/range/iterator_range.hpp
-
map
-

